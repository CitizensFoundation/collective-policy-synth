{"version":3,"file":"ps-connector-node.js","sourceRoot":"","sources":["../../src/operations/ps-connector-node.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAoB,GAAG,EAAE,IAAI,EAAW,MAAM,KAAK,CAAC;AAC3D,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,yCAAyC,CAAC;AACjD,OAAO,6CAA6C,CAAC;AACrD,OAAO,4BAA4B,CAAC;AACpC,OAAO,iCAAiC,CAAC;AAGzC,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AAG7D,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,oBAAoB;IAOxD,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC9E,CAAC;IAED,MAAM,KAAc,MAAM;QACxB,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;OAsBF;SACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,MAAM,CAAW,CAAC;QAC/D,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;mCAGoB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;;;qDAGP,IAAI,CAAC,QAAQ;;;;KAI7D,CAAC;IACJ,CAAC;CACF,CAAA;AAhEC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;mDACS;AAGpC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;qDACN;AALV,gBAAgB;IAD5B,aAAa,CAAC,mBAAmB,CAAC;GACtB,gBAAgB,CAkE5B","sourcesContent":["import { PropertyValueMap, css, html, nothing } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\n\nimport \"@material/web/iconbutton/icon-button.js\";\nimport \"@material/web/progress/circular-progress.js\";\nimport \"@material/web/menu/menu.js\";\nimport \"@material/web/menu/menu-item.js\";\n\nimport { MdMenu } from \"@material/web/menu/menu.js\";\nimport { PsOperationsBaseNode } from \"./ps-operations-base-node.js\";\n\n@customElement(\"ps-connector-node\")\nexport class PsAgentConnector extends PsOperationsBaseNode {\n  @property({ type: Object })\n  connector: PsAgentConnectorInstance;\n\n  @property({ type: Number })\n  connectorId!: number;\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.connector = window.psAppGlobals.getConnectorInstance(this.connectorId);\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        .connectorType {\n          font-size: 15px;\n          text-transform: uppercase;\n          padding: 8px;\n          padding-top: 8px;\n          margin-left: 10px;\n        }\n\n        md-icon-button[root-cause] {\n          --md-icon-button-icon-color: var(--md-sys-color-on-primary);\n        }\n\n        md-circular-progress {\n          --md-circular-progress-size: 28px;\n          margin-bottom: 6px;\n        }\n\n        md-menu {\n          --md-menu-z-index: 1000;\n          z-index: 1000;\n        }\n      `,\n    ];\n  }\n\n  editNode() {\n    this.fire(\"edit-node\", {\n      nodeId: this.nodeId,\n      element: this,\n    });\n  }\n\n  toggleMenu() {\n    const menu = this.shadowRoot?.getElementById(\"menu\") as MdMenu;\n    menu.open = !menu.open;\n  }\n\n  override render() {\n    return html`\n      <div class=\"layout horizontal mainContainer\">\n        <div class=\"layout horizontal center-center\">\n          <div class=\"causeType\">${this.connector.class.name}</div>\n        </div>\n\n        <md-icon-button class=\"editButton\" @click=\"${this.editNode}\"\n          ><md-icon>edit</md-icon></md-icon-button\n        >\n      </div>\n    `;\n  }\n}\n"]}