{"version":3,"file":"ps-add-agent-dialog.js","sourceRoot":"","sources":["../../src/operations/ps-add-agent-dialog.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\n\nimport '@material/web/dialog/dialog.js';\nimport '@material/web/button/text-button.js';\nimport '@material/web/button/filled-button.js';\nimport '@material/web/select/filled-select.js';\nimport '@material/web/select/select-option.js';\nimport '@material/web/textfield/filled-text-field.js';\n\nimport { OpsServerApi } from './OpsServerApi.js';\nimport { YpBaseElement } from '@yrpri/webapp/common/yp-base-element.js';\n\n@customElement('ps-add-agent-dialog')\nexport class PsAddAgentDialog extends YpBaseElement {\n  @property({ type: Boolean }) open = false;\n  @property({ type: Number }) parentAgentId: number;\n  @property({ type: Number }) groupId: number;\n\n  @state() private activeAgentClasses: PsAgentClassAttributes[] = [];\n  @state() private activeAiModels: PsAiModelAttributes[] = [];\n  @state() private selectedAgentClassId: number | null = null;\n  @state() private selectedAiModels: { [key: string]: number | null } = {\n    small: null,\n    medium: null,\n    large: null\n  };\n  @state() private agentName: string = '';\n\n  private api = new OpsServerApi();\n\n  async connectedCallback() {\n    super.connectedCallback();\n    await this.fetchActiveAgentClasses();\n    await this.fetchActiveAiModels();\n  }\n\n  async fetchActiveAgentClasses() {\n    try {\n      this.activeAgentClasses = await this.api.getActiveAgentClasses();\n    } catch (error) {\n      console.error('Error fetching active agent classes:', error);\n    }\n  }\n\n  async fetchActiveAiModels() {\n    try {\n      this.activeAiModels = await this.api.getActiveAiModels();\n    } catch (error) {\n      console.error('Error fetching active AI models:', error);\n    }\n  }\n\n  render() {\n    return html`\n      <md-dialog ?open=\"${this.open}\" @closed=\"${this._handleClose}\">\n        <div slot=\"headline\">Add New Agent</div>\n        <div slot=\"content\">\n          <md-filled-text-field\n            label=\"Agent Name\"\n            @input=\"${this._handleNameInput}\"\n            value=\"${this.agentName}\"\n          ></md-filled-text-field>\n          <md-filled-select\n            label=\"Select Agent Class\"\n            @change=\"${this._handleAgentClassSelection}\"\n          >\n            ${this.activeAgentClasses?.map(\n              agentClass => html`\n                <md-select-option value=\"${agentClass.id}\">\n                  <div slot=\"headline\">${agentClass.name}</div>\n                </md-select-option>\n              `\n            )}\n          </md-filled-select>\n          <div class=\"aiModelInfo\">\n            ${this.t(\"aiModelAgentCreateInfo\")}\n          </div>\n          ${['small', 'medium', 'large'].map(size => this.renderAiModelSelect(size))}\n        </div>\n        <div slot=\"actions\">\n          <md-text-button @click=\"${this._handleClose}\">Cancel</md-text-button>\n          <md-filled-button @click=\"${this._handleAddAgent}\">Add Agent</md-filled-button>\n        </div>\n      </md-dialog>\n    `;\n  }\n\n  getLocalizedModelLabel(size: string) {\n    if (size==='small') {\n      return this.t(\"selectSmallAiModel\");\n    } else if (size==='medium') {\n      return this.t(\"selectMediumAiModel\");\n    } else if (size==='large') {\n      return this.t(\"selectLargeAiModel\");\n    }\n  }\n\n  private renderAiModelSelect(size: string) {\n    return html`\n      <md-filled-select\n        .label=\"${this.getLocalizedModelLabel(size)}\"\n        @change=\"${(e: Event) => this._handleAiModelSelection(e, size)}\"\n      >\n        ${this.activeAiModels.map(\n          aiModel => html`\n            <md-select-option value=\"${aiModel.id}\">\n              <div slot=\"headline\">${aiModel.name}</div>\n            </md-select-option>\n          `\n        )}\n      </md-filled-select>\n    `;\n  }\n\n  private _handleNameInput(e: Event) {\n    const input = e.target as HTMLInputElement;\n    this.agentName = input.value;\n  }\n\n  private _handleAgentClassSelection(e: Event) {\n    const select = e.target as HTMLSelectElement;\n    this.selectedAgentClassId = Number(select.value);\n  }\n\n  private _handleAiModelSelection(e: Event, size: string) {\n    const select = e.target as HTMLSelectElement;\n    this.selectedAiModels[size] = Number(select.value);\n  }\n\n  private _handleClose() {\n    this.dispatchEvent(new CustomEvent('close'));\n  }\n\n  private async _handleAddAgent() {\n    if (!this.agentName || !this.selectedAgentClassId ||\n        !this.selectedAiModels.small || !this.selectedAiModels.medium || !this.selectedAiModels.large) {\n      console.error('Agent name, class, or AI models not selected');\n      return;\n    }\n\n    try {\n      const newAgent = await this.api.createAgent(\n        this.agentName,\n        this.selectedAgentClassId,\n        this.selectedAiModels,\n        this.parentAgentId,\n        this.groupId\n      );\n      this.dispatchEvent(\n        new CustomEvent('agent-added', { detail: { agent: newAgent } })\n      );\n      this._handleClose();\n    } catch (error) {\n      console.error('Error creating new agent:', error);\n    }\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        md-filled-text-field,\n        md-filled-select {\n          width: 100%;\n          margin-bottom: 16px;\n          margin-top: 16px;\n        }\n\n        .aiModelInfo {\n          margin-top: 16px;\n          margin-bottom: 8px;\n          font-size: var(--md-sys-typescale-label-medium-size);\n        }\n      `,\n    ];\n  }\n}"]}