{"version":3,"file":"YpServerApiBase.js","sourceRoot":"","sources":["../../../../src/@yrpri/common/YpServerApiBase.ts"],"names":[],"mappings":"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","sourcesContent":["import { YpCodeBase } from './YpCodeBaseclass.js';\n\nexport class YpServerApiBase extends YpCodeBase {\n  baseUrlPath = '/api';\n\n  static transformCollectionTypeToApi(type: string): string {\n    let transformedApiType;\n\n    switch (type) {\n      case 'domain':\n        transformedApiType = 'domains';\n        break;\n      case 'community':\n        transformedApiType = 'communities';\n        break;\n      case 'group':\n        transformedApiType = 'groups';\n        break;\n      case 'post':\n        transformedApiType = 'posts';\n        break;\n      case 'user':\n        transformedApiType = 'users';\n        break;\n      default:\n        transformedApiType = '';\n        console.error(`Cant find collection type transform for ${type}`);\n    }\n\n    return transformedApiType;\n  }\n\n  protected async fetchWrapper(\n    url: string,\n    options: RequestInit = {},\n    showUserError = true,\n    errorId: string | undefined = undefined,\n    skipJsonParse = false\n  ) {\n    if (!options.headers) {\n      options.headers = {\n        'Content-Type': 'application/json',\n      };\n    }\n\n    if (options.method !== 'GET') {\n      //@ts-ignore\n      //options.headers['X-CSRF-Token'] = window.csrfToken;\n    }\n\n    if (\n      !navigator.onLine &&\n      options.method === 'POST' &&\n      window.fetch !== undefined\n    ) {\n      window.appGlobals.offline.sendWhenOnlineNext({\n        body: options.body,\n        method: options.method,\n        //@ts-ignore\n        headers: options.headers,\n        params: {},\n        url: url,\n      });\n      throw new Error('offlineSendLater');\n    } else if (\n      !navigator.onLine &&\n      ['POST', 'PUT', 'DELETE'].indexOf(options.method!) > -1\n    ) {\n      this.showToast(this.t('youAreOfflineCantSend'));\n      throw new Error('offlineSendLater');\n    } else if (skipJsonParse) {\n      const response = await fetch(url, options);\n      return response.text();\n    } else {\n      const response = await fetch(url, options);\n      return this.handleResponse(response, showUserError, errorId);\n    }\n  }\n\n  //TODO: Handle 401\n  /*\n\n  _error: function (event) {\n        this._setActive(false);\n        if (!navigator.onLine) {\n          this._showToast(this.t('youAreOffline'));\n          event.stopPropagation();\n        } else {\n          if (this.dispatchError) {\n            event.stopPropagation();\n            if (event.detail.request.xhr.response && event.detail.request.xhr.response.error) {\n              this.fire(\"error\", event.detail.request.xhr.response.error);\n            } else if (event.detail.request.xhr.response && event.detail.request.xhr.response.message) {\n              this.fire(\"error\", event.detail.request.xhr.response.message);\n            } else if (event.detail.request.xhr.statusText) {\n              this.fire(\"error\", event.detail.request.xhr.statusText);\n            } else {\n              this.fire(\"error\", event.detail.error);\n            }\n          } else if (event.detail.error && event.detail.error.message &&\n            this._is401(event.detail.error.message) && !window.appUser.user &&\n            this.retryMethodAfter401Login) {\n            window.appUser.loginFor401(this.retryMethodAfter401Login);\n          } else if (this.useDialog && !this.disableUserError) {\n            this.showErrorDialog(event.detail.error);\n          }\n        }\n      },\n\n  */\n  protected async handleResponse(\n    response: Response,\n    showUserError: boolean,\n    errorId: string | undefined = undefined\n  ) {\n    if (response.ok) {\n      let responseJson = null;\n      try {\n        responseJson = await response.json();\n      } catch (error) {\n        if (response.status === 200 && response.statusText === 'OK') {\n          // Do nothing\n        } else {\n          this.fireGlobal('yp-network-error', {\n            response: response,\n            jsonError: error,\n            showUserError,\n            errorId,\n          });\n        }\n      }\n      if (responseJson !== null) {\n        return responseJson;\n      } else {\n        return true;\n      }\n    } else {\n      this.fireGlobal('yp-network-error', {\n        response: response,\n        showUserError,\n        errorId,\n      });\n      return null;\n    }\n  }\n}\n"]}