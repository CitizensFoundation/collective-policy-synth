{"version":3,"file":"lpt-streaming-ai-response.js","sourceRoot":"","sources":["../../../src/ltp/lpt-streaming-ai-response.ts"],"names":[],"mappings":";AAAA,OAAO,EAAoB,GAAG,EAAE,IAAI,EAAW,MAAM,KAAK,CAAC;AAC3D,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,yCAAyC,CAAC;AACjD,OAAO,6CAA6C,CAAC;AACrD,OAAO,4BAA4B,CAAC;AACpC,OAAO,iCAAiC,CAAC;AAEzC,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAK1C,IAAM,sBAAsB,GAA5B,MAAM,sBAAuB,SAAQ,YAAY;IAqBtD;QACE,KAAK,EAAE,CAAC;QAXV,gBAAW,GAAG,KAAK,CAAC;QAMpB,qBAAgB,GAAG,KAAK,CAAC;QAMvB,IAAI,CAAC,GAAG,GAAG,IAAI,YAAY,EAAE,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,KAAK,CAAC,iBAAiB,EAAE,CAAC;IAE5B,CAAC;IAED,OAAO,CAAC,iBAAyD;QAC/D,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACnC,CAAC;IAED,oBAAoB;QAClB,KAAK,CAAC,oBAAoB,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO;YACL,KAAK,CAAC,MAAM;YACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiEF;SACF,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,kBAAkB;QACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEzE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;YAC3B,YAAY,EAAE,IAAI,CAAC,MAAM;YACzB,KAAK;SACN,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,IAAI,gBAAgB;QAClB,QAAQ,IAAI,CAAC,WAAW,EAAE;YACxB,KAAK,KAAK;gBACR,OAAO,aAAa,CAAC;YACvB;gBACE,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7C,OAAO,UAAU,CAAC;SACrB;IACH,CAAC;IAED,UAAU;QACR,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,MAAM,CAAW,CAAC;QAC/D,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;IAED,IAAI,WAAW;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO,MAAM,CAAC;SACf;aAAM;YACL,QAAQ,IAAI,CAAC,WAAW,EAAE;gBACxB,KAAK,KAAK;oBACR,OAAO,YAAY,CAAC;gBACtB,KAAK,aAAa;oBAChB,OAAO,cAAc,CAAC;gBACxB,KAAK,mBAAmB;oBACtB,OAAO,MAAM,CAAC;gBAChB,KAAK,WAAW;oBACd,OAAO,MAAM,CAAC;gBAChB;oBACE,OAAO,WAAW,CAAC;aACtB;SACF;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;uBAGQ,IAAI,CAAC,WAAW;;;;;uBAKhB,IAAI,CAAC,WAAW,KAAK,KAAK;2BACtB,IAAI,CAAC,WAAW;;cAE7B,IAAI,CAAC,gBAAgB;;;;uCAII,IAAI,CAAC,gBAAgB;aAC/C,IAAI,CAAC,WAAW;;;;;sCAKS,IAAI,CAAC,UAAU;;;;;;;;;;;;;;;;yBAgB5B,IAAI,CAAC,WAAW;;YAE7B,IAAI,CAAC,gBAAgB;YACrB,CAAC,CAAC,IAAI,CAAA;;eAEH;YACH,CAAC,CAAC,IAAI,CAAA;;;4BAGU,IAAI,CAAC,kBAAkB;;;;;4BAKvB,GAAG,EAAE,CACb,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE;gBACjC,YAAY,EAAE,IAAI,CAAC,MAAM;aAC1B,CAAC;;;eAGP;;;KAGV,CAAC;IACJ,CAAC;CACF,CAAA;AA5NC;IAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;sDACZ;AAEf;IAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;2DACF;AAEzB;IAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;qDACb;AAEd;IAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;2DACR;AAEpB;IAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;gEACF;AAEzB;IAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;gEACH;AAjBd,sBAAsB;IADlC,aAAa,CAAC,2BAA2B,CAAC;;GAC9B,sBAAsB,CA6NlC;SA7NY,sBAAsB","sourcesContent":["import { PropertyValueMap, css, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\nimport '@material/web/iconbutton/icon-button.js';\nimport '@material/web/progress/circular-progress.js';\nimport '@material/web/menu/menu.js';\nimport '@material/web/menu/menu-item.js';\n\nimport { CpsStageBase } from '../cps-stage-base.js';\nimport { LtpServerApi } from './LtpServerApi.js';\nimport { LtpCurrentRealityTree } from './ltp-current-reality-tree.js';\nimport { MdMenu } from '@material/web/menu/menu.js';\n\n@customElement('ltp-streaming-ai-response')\nexport class LtpStreamingAIResponse extends CpsStageBase {\n  @property({ type: String })\n  nodeId: string;\n\n  @property({ type: String })\n  crtNodeType: CrtNodeType;\n\n  @property({ type: String })\n  crtId: string;\n\n  @property({ type: Boolean })\n  isRootCause = false;\n\n  @property({ type: String })\n  causeDescription: string;\n\n  @property({ type: Boolean })\n  isCreatingCauses = false;\n\n  api: LtpServerApi;\n\n  constructor() {\n    super();\n    this.api = new LtpServerApi();\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n\n  }\n\n  updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n  }\n\n  static get styles() {\n    return [\n      super.styles,\n      css`\n        .causeText {\n          font-size: 14px;\n          padding: 8px;\n          height: 100%;\n          width: 100%;\n          max-height: 70px;\n          overflow-y: auto;\n        }\n\n        .causeText[is-ude] {\n          max-height: 75px;\n        }\n\n        .causeTextContainer {\n          height: 100%;\n        }\n\n        .causeText[root-cause] {\n        }\n\n        .createOptionsButtons {\n          display: flex;\n          justify-content: center;\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          right: 0;\n          padding-left: 8px;\n          padding-right: 8px;\n        }\n\n        .createOptionsButtons[root-cause] {\n        }\n\n        .menuButton {\n          position: absolute;\n          bottom: 0;\n          right: 0;\n          z-index: 1000;\n        }\n\n        .typeIconCore {\n          position: absolute;\n          bottom: 8px;\n          left: 8px;\n        }\n\n        .typeIcon {\n          color: var(--md-sys-color-primary);\n        }\n\n        .typeIconUde {\n          color: var(--md-sys-color-tertiary);\n        }\n\n        md-circular-progress {\n          --md-circular-progress-size: 28px;\n          margin-bottom: 6px;\n        }\n\n        md-menu {\n          --md-menu-z-index: 1000;\n          z-index: 1000;\n        }\n      `,\n    ];\n  }\n\n  async createDirectCauses() {\n    this.isCreatingCauses = true;\n\n    const nodes = await this.api.createDirectCauses(this.crtId, this.nodeId);\n\n    this.fireGlobal('add-nodes', {\n      parentNodeId: this.nodeId,\n      nodes,\n    });\n\n    this.isCreatingCauses = false;\n  }\n\n  get crtTypeIconClass() {\n    switch (this.crtNodeType) {\n      case 'ude':\n        return 'typeIconUde';\n      default:\n        console.log('crtNodeType', this.crtNodeType);\n        return 'typeIcon';\n    }\n  }\n\n  toggleMenu() {\n    const menu = this.shadowRoot?.getElementById('menu') as MdMenu;\n    menu.open = !menu.open;\n  }\n\n  get crtTypeIcon() {\n    if (this.isRootCause) {\n      return 'flag';\n    } else {\n      switch (this.crtNodeType) {\n        case 'ude':\n          return 'bug_report';\n        case 'directCause':\n          return 'arrow_upward';\n        case 'intermediateCause':\n          return 'link';\n        case 'rootCause':\n          return 'flag';\n        default:\n          return 'more_vert';\n      }\n    }\n  }\n\n  render() {\n    return html`\n      <div\n        class=\"layout vertical mainContainer\"\n        ?root-cause=\"${this.isRootCause}\"\n      >\n        <div class=\"layout horizontal causeTextContainer\">\n          <div\n            class=\"causeText\"\n            ?is-ude=\"${this.crtNodeType === 'ude'}\"\n            ?root-cause=\"${this.isRootCause}\"\n          >\n            ${this.causeDescription}\n          </div>\n        </div>\n\n        <md-icon class=\"typeIconCore ${this.crtTypeIconClass}\"\n          >${this.crtTypeIcon}</md-icon\n        >\n\n        <div class=\"menuButton\">\n          <span style=\"position: relative\">\n            <md-icon-button @click=\"${this.toggleMenu}\"\n              ><md-icon>more_vert</md-icon></md-icon-button\n            >\n            <md-menu id=\"menu\" anchor=\"button\">\n              <md-menu-item id=\"1\" disabled>\n                <div slot=\"headline\">Edit</div>\n              </md-menu-item>\n              <md-menu-item id=\"2\" disabled>\n                <div slot=\"headline\">Delete</div>\n              </md-menu-item>\n            </md-menu>\n          </span>\n        </div>\n\n        <div\n          class=\"layout horizontal center-justify createOptionsButtons\"\n          ?root-cause=\"${this.isRootCause}\"\n        >\n          ${this.isCreatingCauses\n            ? html`\n                <md-circular-progress indeterminate></md-circular-progress>\n              `\n            : html`\n                <md-icon-button\n                  class=\"createOptionsButton\"\n                  @click=\"${this.createDirectCauses}\"\n                  ><md-icon>prompt_suggestion</md-icon></md-icon-button\n                >\n                <md-icon-button\n                  class=\"createOptionsButton\"\n                  @click=\"${() =>\n                    this.fire('open-add-cause-dialog', {\n                      parentNodeId: this.nodeId,\n                    })}\"\n                  ><md-icon>person_edit</md-icon></md-icon-button\n                >\n              `}\n        </div>\n      </div>\n    `;\n  }\n}\n"]}