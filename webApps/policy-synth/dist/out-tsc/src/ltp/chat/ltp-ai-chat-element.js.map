{"version":3,"file":"ltp-ai-chat-element.js","sourceRoot":"","sources":["../../../../src/ltp/chat/ltp-ai-chat-element.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\nimport { Layouts } from '../../flexbox-literals/classes';\nimport { YpBaseElement } from '../../@yrpri/common/yp-base-element';\nimport { resolveMarkdown } from './litMarkdown.js';\nimport '@material/web/icon/icon.js';\nimport '@material/web/checkbox/checkbox.js';\n\nimport '@material/web/button/outlined-button.js';\nimport '@material/web/button/filled-button.js';\nimport '@material/web/textfield/filled-text-field.js';\n\nimport '@material/web/progress/circular-progress.js';\nimport { jsonrepair } from 'jsonrepair';\nimport '../../@yrpri/common/yp-image.js';\nimport { LtpServerApi } from '../LtpServerApi';\nimport { MdCheckbox } from '@material/web/checkbox/checkbox.js';\n\n@customElement('ltp-ai-chat-element')\nexport class LtpAiChatElement extends YpBaseElement {\n  @property({ type: String })\n  message!: string;\n\n  @property({ type: String })\n  sender!: 'you' | 'bot';\n\n  @property({ type: String })\n  detectedLanguage!: string;\n\n  @property({ type: String })\n  parentNodeId!: string;\n\n  @property({ type: String })\n  crtId!: string | number;\n\n  @property({ type: Number })\n  clusterId!: number;\n\n  @property({ type: String })\n  type:\n    | 'start'\n    | 'error'\n    | 'moderation_error'\n    | 'info'\n    | 'message'\n    | 'thinking'\n    | 'noStreaming'\n    | undefined;\n\n  @property({ type: Boolean })\n  active = true;\n\n  @property({ type: Boolean })\n  fullReferencesOpen = false;\n\n  @property({ type: String })\n  followUpQuestionsRaw: string = '';\n\n  @property({ type: Array })\n  followUpQuestions: string[] = [];\n\n  @property({ type: Array })\n  refinedCausesSuggestions: string[] | undefined = undefined;\n\n  @property({ type: Boolean })\n  jsonLoading = false;\n\n  @property({ type: Boolean })\n  lastChainCompletedAsValid = false;\n\n  @property({ type: Array })\n  lastValidateCauses: string[] | undefined = undefined;\n\n  isCreatingCauses: boolean = false;\n\n  api: LtpServerApi;\n\n  constructor() {\n    super();\n    this.api = new LtpServerApi();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    // Subscribe to MarkdownDirective events\n    this.addEventListener('jsonLoadingStart', this.handleJsonLoadingStart);\n    this.addEventListener('jsonLoadingEnd', this.handleJsonLoadingEnd);\n  }\n\n  override disconnectedCallback() {\n    // Remove event listeners for MarkdownDirective\n    this.removeEventListener('jsonLoadingStart', this.handleJsonLoadingStart);\n    this.removeEventListener('jsonLoadingEnd', this.handleJsonLoadingEnd);\n\n    super.disconnectedCallback();\n  }\n\n  stopJsonLoading() {\n    this.jsonLoading = false;\n  }\n\n  handleJsonLoadingStart = () => {\n    console.log('JSON loading start event triggered');\n    this.jsonLoading = true;\n    this.requestUpdate(); // If needed to trigger a re-render\n  };\n\n  handleJsonLoadingEnd = (event: any) => {\n    const jsonContent = event.detail;\n    console.log(\n      'JSON loading end event triggered with JSON content:',\n      jsonContent\n    );\n    this.jsonLoading = false;\n    let jsonContentParsed: CrtRefinedCausesReply | undefined = undefined;\n    try {\n      jsonContentParsed = JSON.parse(jsonContent.jsonContent) as CrtRefinedCausesReply;\n    } catch (e) {\n      console.error('Error parsing JSON content:', e);\n      try {\n        jsonContentParsed = JSON.parse(jsonrepair(jsonContent.jsonContent));\n      } catch (e) {\n        console.error('Error parsing JSON content again:', e);\n      }\n    }\n\n    if (jsonContentParsed) {\n      if (\n        this.lastChainCompletedAsValid &&\n        this.lastValidateCauses &&\n        this.lastValidateCauses.length > 0\n      ) {\n        this.refinedCausesSuggestions = this.lastValidateCauses;\n      } else if (jsonContentParsed.suggestedCauses) {\n        this.refinedCausesSuggestions = jsonContentParsed.suggestedCauses;\n      }\n    }\n  };\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        :host {\n          display: flex;\n        }\n        .chatImage {\n          padding: 8px;\n          vertical-align: text-top;\n        }\n\n        .robotIcon {\n          --md-icon-size: 34px;\n        }\n\n        .chatText {\n          padding: 8px;\n          padding-left: 8px;\n          margin-top: 0;\n          padding-top: 2px;\n        }\n\n        .chatTextUser {\n          padding-top: 12px;\n        }\n\n        .userChatDialog {\n          color: var(--md-sys-color-on-primary);\n          background-color: var(--md-sys-color-primary);\n          padding: 8px;\n          margin: 16px;\n          line-height: 1.35;\n          margin-bottom: 0px;\n          border-radius: 12px;\n        }\n\n        .post {\n          margin: 8px;\n          padding: 12px;\n          border-radius: 24px;\n          margin-right: 0;\n          background-color: var(--md-sys-color-secondary);\n          color: var(--md-sys-color-on-secondary);\n          cursor: pointer;\n        }\n\n        .refinedCausesSuggestionshowMore {\n          padding-left: 16px;\n          padding-right: 16px;\n        }\n\n        .postImage {\n          height: 28px;\n          width: 50px;\n        }\n\n        .postName {\n          display: flex;\n          justify-content: center;\n          align-content: center;\n          flex-direction: column;\n          margin-right: 8px;\n        }\n\n        .chatGPTDialogContainer {\n          max-width: 100%;\n          width: 100%;\n        }\n\n        .chatGPTDialog {\n          color: var(--md-sys-color-on-primary-container);\n          background-color: var(--md-sys-color-primary-container);\n          padding: 8px;\n          margin: 16px;\n          line-height: 1.35;\n          margin-bottom: 0px;\n          border-radius: 10px;\n          max-width: 89%;\n          margin-top: 12px;\n        }\n\n        @media (max-width: 800px) {\n          .chatGPTDialog {\n            margin: 8px;\n            max-width: 100%;\n          }\n        }\n\n        .chatGPTDialog[error] {\n          background-color: var(--md-sys-color-error);\n          color: var(--md-sys-color-on-error);\n        }\n\n        .followup-question-container {\n          margin-top: 12px;\n          width: 100%;\n          align-self: flex-end;\n          justify-content: flex-end;\n          margin-right: 32px;\n          width: 100%;\n        }\n\n        .labelText {\n          padding-left: 6px;\n          width: 100%;\n        }\n\n        md-circular-progress {\n          --md-circular-progress-size: 32px;\n          width: 32px;\n          height: 32px;\n          margin-top: 8px;\n        }\n\n        .refinedSuggestions {\n          padding: 0;\n          border-radius: 8px;\n          margin: 16px;\n          margin-top: 0;\n        }\n\n        .refinedSuggestions label {\n          display: flex;\n          align-items: center;\n          margin-bottom: 0; // Reduced margin for a tighter layout\n          padding: 8px;\n        }\n\n        .labelText {\n          margin-left: 4px; // Adjust as needed\n        }\n\n        .refinedContainer {\n          padding: 0;\n        }\n\n        .directCause {\n          background-color: var(--md-sys-color-primary);\n          color: var(--md-sys-color-on-primary);\n          margin-bottom: 16px !important;\n          border-radius: 16px;\n        }\n\n        .assumption {\n          background-color: var(--md-sys-color-secondary);\n          color: var(--md-sys-color-on-secondary);\n          margin-bottom: 16px !important;\n          border-radius: 16px;\n        }\n\n        .assumptionCheckbox {\n          --md-checkbox-outline-color: var(--md-sys-color-on-secondary);\n          --md-checkbox-hover-outline-color: var(--md-sys-color-on-primary);\n        }\n\n        .directCauseCheckbox {\n          --md-checkbox-outline-color: var(--md-sys-color-on-primary);\n          --md-checkbox-hover-outline-color: var(--md-sys-color-on-secondary);\n        }\n\n        md-filled-button {\n          max-width: 250px;\n          margin-top: 16px;\n          margin-bottom: 16px;\n        }\n\n        .refinedCausesSuggestions {\n          margin-top: 8px;\n          margin-left: 36px;\n          margin-right: 36px;\n          margin-bottom: 22px;\n          padding: 8px;\n          border-radius: 12px;\n          background-color: var(--md-sys-color-tertiary-container);\n          color: var(--md-sys-color-on-tertiary-container);\n        }\n        .followup-question {\n          padding: 0;\n          margin: 6px;\n        }\n\n        .chat-message {\n          flex: 1;\n        }\n\n        .thinkingText {\n          margin-top: 4px;\n          margin-left: 6px;\n          color: var(--md-sys-color-secondary);\n        }\n\n        .thinkingText[active] {\n          color: var(--md-sys-color-primary);\n        }\n\n        .doneIcon {\n          margin-left: 16px;\n          margin-right: 4px;\n          color: var(--md-sys-color-secondary);\n          font-size: 28px;\n        }\n\n        .postCitation {\n          font-size: 9px;\n          background-color: var(--md-sys-color-inverse-on-surface);\n          color: var(--md-sys-color-primary);\n          padding: 3px;\n        }\n\n        md-checkbox {\n          margin: 15px;\n        }\n\n        .followUpQuestionMark {\n          color: var(--md-sys-color-primary);\n          font-size: 36px;\n          margin-top: 8px;\n        }\n\n        .citationLink {\n          margin-left: 8px;\n          margin-bottom: 8px;\n        }\n\n        .progress-ring {\n          transform: rotate(-90deg);\n          color: var(--md-sys-color-secondary);\n          transform-origin: 50% 50%;\n          margin-left: 16px;\n          margin-right: 4px;\n        }\n        .progress-ring__circle {\n          stroke: var(--md-sys-color-primary);\n          stroke-dasharray: 75.4;\n          stroke-dashoffset: 75.4;\n          stroke-linecap: round;\n          animation: progress-ring 2.5s infinite;\n        }\n        @keyframes progress-ring {\n          0% {\n            stroke-dashoffset: 75.4;\n          }\n          50% {\n            stroke-dashoffset: 0;\n            transform: rotate(0deg);\n          }\n        }\n\n        .suggestionsHeader {\n          font-size: 18px;\n          color: var(--md-sys-color-primary);\n          margin-bottom: 16px;\n        }\n      `,\n    ];\n  }\n\n  async addSelected() {\n    const checkboxes = this.shadowRoot!.querySelectorAll('md-checkbox');\n\n    // Arrays to hold selected causes and assumptions\n    const selectedCauses: string[] = [];\n    const selectedAssumptions: string[] = [];\n\n    // Iterate over each checked checkbox\n    checkboxes.forEach(checkbox => {\n      if (checkbox.checked) {\n        const item = checkbox.getAttribute('aria-label');\n        const type = (checkbox as MdCheckbox).dataset.type;\n\n        if (type === 'directCause') {\n          selectedCauses.push(item!);\n        } else if (type === 'assumption') {\n          selectedAssumptions.push(item!);\n        }\n      }\n    });\n\n    this.isCreatingCauses = true;\n\n    // Add causes and assumptions using separate API calls\n    let nodes: LtpCurrentRealityTreeDataNode[] = [];\n\n    if (this.lastChainCompletedAsValid) {\n      if (selectedCauses.length) {\n        const causesNodes = await this.api.addDirectCauses(\n          this.crtId,\n          this.parentNodeId,\n          selectedCauses,\n          'directCause'\n        );\n        nodes = nodes.concat(causesNodes);\n      }\n\n      if (selectedAssumptions.length) {\n        const assumptionsNodes = await this.api.addDirectCauses(\n          this.crtId,\n          this.parentNodeId,\n          selectedAssumptions,\n          \"assumption\"\n        );\n        nodes = nodes.concat(assumptionsNodes);\n      }\n\n      this.fireGlobal(\"add-nodes\", {\n        parentNodeId: this.parentNodeId,\n        nodes,\n      });\n\n      await new Promise((resolve) => setTimeout(resolve, 10));\n\n      this.fire(\"close-add-cause-dialog\");\n\n      this.isCreatingCauses = false;\n    } else {\n      this.fire(\"validate-selected-causes\", selectedCauses);\n    }\n\n    this.fire(\"scroll-down-enabled\");\n  }\n\n  get isError() {\n    return this.type == 'error' || this.type == 'moderation_error';\n  }\n\n  renderCGImage() {\n    return html` <md-icon class=\"robotIcon\">smart_toy</md-icon> `;\n  }\n\n  renderRoboImage() {\n    return html` <md-icon class=\"robotIcon\">person</md-icon> `;\n  }\n\n  renderRefinedSuggestions() {\n    if (!this.refinedCausesSuggestions) {\n      return nothing;\n    }\n\n    const renderSection = (\n      suggestions: string[],\n      headerText: string,\n      typeClass: string\n    ) => {\n      if (!suggestions || suggestions.length === 0) return nothing;\n\n      return html`\n        <div class=\"layout horizontal center-center\">\n          <div class=\"suggestionsHeader\">${headerText}</div>\n        </div>\n        <div\n          class=\"layout vertical refinedSuggestions ${typeClass} wrap\"\n          role=\"group\"\n        >\n          ${suggestions.map(\n            (text) => html`\n              <label class=\"layout horizontal refinedContainer\">\n                <md-checkbox\n                  aria-label=\"${text}\"\n                  .checked=\"${this.lastChainCompletedAsValid}\"\n                  .disabled=\"${this.lastChainCompletedAsValid}\"\n                  class=\"${typeClass}Checkbox\"\n                  data-type=\"${typeClass}\"\n                  touch-target=\"wrapper\"\n                ></md-checkbox>\n                <div class=\"labelText\">${text}</div>\n              </label>\n            `\n          )}\n        </div>\n      `;\n    };\n\n    return html`\n      ${renderSection(\n        this.refinedCausesSuggestions ?? [],\n        \"Suggested Direct Causes\",\n        \"directCause\"\n      )}\n\n      <div class=\"layout horizontal center-center\">\n        <md-filled-button @click=\"${() => this.addSelected()}\">\n          ${this.lastChainCompletedAsValid\n            ? this.t(\"Add selected\")\n            : this.t(\"Validate selected\")}\n        </md-filled-button>\n      </div>\n    `;\n  }\n\n  renderChatGPT(): any {\n    console.error(\n      `renderChatGPT refinedCausesSuggestions`,\n      JSON.stringify(this.refinedCausesSuggestions, null, 2)\n    );\n    return html`\n      <div class=\"layout vertical chatGPTDialogContainer\">\n        <div\n          class=\"chatGPTDialog layout vertical bot-message\"\n          ?error=\"${this.isError}\"\n        >\n          <div class=\"layout horizontal\">\n            <div class=\"layout vertical chatImage\">${this.renderCGImage()}</div>\n            <div class=\"layout vertical chatText\">\n              ${resolveMarkdown(this.message, {\n                includeImages: true,\n                includeCodeBlockClassNames: true,\n                handleJsonBlocks: true,\n                targetElement: this,\n              })}\n              ${this.jsonLoading\n                ? html`<div class=\"layout horizontal center-center\">\n                    <md-circular-progress indeterminate></md-circular-progress>\n                  </div>`\n                : nothing}\n            </div>\n          </div>\n          ${this.renderRefinedSuggestions()}\n        </div>\n        ${this.followUpQuestions && this.followUpQuestions.length > 0\n          ? html`\n              <div class=\"layout horizontal followup-question-container wrap\">\n                <md-icon class=\"followUpQuestionMark\">contact_support</md-icon\n                >${this.followUpQuestions.map(\n                  question => html`\n                    <md-outlined-button\n                      class=\"followup-question\"\n                      .label=\"${question}\"\n                      @click=\"${() => this.fire('followup-question', question)}\"\n                    ></md-outlined-button>\n                  `\n                )}\n              </div>\n            `\n          : nothing}\n      </div>\n    `;\n  }\n\n  parseFollowUpQuestions() {\n    this.followUpQuestionsRaw = this.followUpQuestionsRaw.replace(\n      /<<([^>>]+)>>/g,\n      (match, content) => {\n        this.followUpQuestions.push(content);\n        return '';\n      }\n    );\n  }\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n    if (\n      changedProperties.has('followUpQuestionsRaw') &&\n      this.followUpQuestionsRaw\n    ) {\n      this.parseFollowUpQuestions();\n    }\n  }\n\n  renderUser() {\n    return html`\n      <div class=\"userChatDialog layout horizontal user-message\">\n        <div class=\"layout vertical chatImage\">${this.renderRoboImage()}</div>\n        <div class=\"layout vertical chatText chatTextUser\">${this.message}</div>\n      </div>\n    `;\n  }\n\n  renderNoStreaming() {\n    return html`${this.active\n        ? html`<svg class=\"progress-ring\" width=\"28\" height=\"28\">\n            <circle\n              class=\"progress-ring__circle\"\n              ?active=\"${this.active}\"\n              stroke=\"blue\"\n              stroke-width=\"2\"\n              fill=\"transparent\"\n              r=\"10\"\n              cx=\"12\"\n              cy=\"12\"\n            />\n          </svg>`\n        : html`<md-icon class=\"doneIcon\">done</md-icon>`}\n      <div class=\"thinkingText\" ?active=\"${this.active}\">\n        ${this.message}\n      </div> `;\n  }\n\n  renderThinking() {\n    return html`${this.active\n        ? html`<svg class=\"progress-ring\" width=\"28\" height=\"28\">\n            <circle\n              class=\"progress-ring__circle\"\n              ?active=\"${this.active}\"\n              stroke=\"blue\"\n              stroke-width=\"2\"\n              fill=\"transparent\"\n              r=\"10\"\n              cx=\"12\"\n              cy=\"12\"\n            />\n          </svg>`\n        : html`<md-icon class=\"doneIcon\">done</md-icon>`}\n      <div class=\"thinkingText\" ?active=\"${this.active}\">\n        ${this.getThinkingText()}\n      </div> `;\n  }\n\n  getThinkingText() {\n    //TODO: Fix this activate i18n\n    if (this.detectedLanguage == 'es') {\n      return 'Mõeldes...';\n    } else if (this.detectedLanguage == 'is') {\n      return 'Hugsa...';\n    } else {\n      return 'Thinking...';\n    }\n  }\n\n  renderMessage() {\n    if (this.sender === 'you') {\n      return this.renderUser();\n    } else if (this.sender === 'bot' && this.type === 'thinking') {\n      return this.renderThinking();\n    } else if (this.sender === 'bot' && this.type === 'noStreaming') {\n      return this.renderNoStreaming();\n    } else if (this.sender === 'bot') {\n      return this.renderChatGPT();\n    }\n  }\n\n  override render() {\n    return html` ${this.renderMessage()} `;\n  }\n}\n"]}