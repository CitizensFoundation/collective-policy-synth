{"version":3,"file":"ltp-chat-assistant.js","sourceRoot":"","sources":["../../../../src/ltp/chat/ltp-chat-assistant.ts"],"names":[],"mappings":"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","sourcesContent":["import { PropertyValueMap, css, html } from 'lit';\nimport { property, customElement, query, queryAll } from 'lit/decorators.js';\n\nimport { YpBaseElement } from '../../@yrpri/common/yp-base-element';\n\nimport '@material/web/fab/fab.js';\n\nimport '@material/web/radio/radio.js';\nimport '@material/web/button/elevated-button.js';\nimport '@material/web/button/text-button.js';\nimport '@material/web/button/outlined-button.js';\nimport '@material/web/button/filled-button.js';\nimport '@material/web/textfield/outlined-text-field.js';\nimport '@material/web/icon/icon.js';\n\nimport '@material/web/iconbutton/outlined-icon-button.js';\n\nimport '../../@yrpri/common/yp-image.js';\nimport { LtpAiChatElement } from './ltp-ai-chat-element.js';\nimport { MdFilledTonalButton } from '@material/web/button/filled-tonal-button.js';\nimport { MdOutlinedTextField } from '@material/web/textfield/outlined-text-field.js';\n\nimport './ltp-ai-chat-element.js';\nimport { LtpServerApi } from '../LtpServerApi';\n\nconst PROMPT_DEBUG = true;\n\n@customElement('ltp-chat-assistant')\nexport class LtpChatAssistant extends YpBaseElement {\n  @property({ type: Array })\n  chatLog: LtpAiChatWsMessage[] = [];\n\n  @property({ type: String })\n  infoMessage!: string;\n\n  @property({ type: String })\n  wsClientId!: string;\n\n  @property({ type: Object })\n  crtData!: LtpCurrentRealityTreeData;\n\n  @property({ type: Object })\n  nodeToAddCauseTo!: LtpCurrentRealityTreeDataNode;\n\n  @property({ type: String })\n  defaultInfoMessage: string =\n    \"I'm your Current Reality Tree assistant. I'm here to help to identify direct causes of: \";\n\n  @property({ type: String })\n  wsEndpoint!: string;\n\n  @property({ type: Object })\n  ws!: WebSocket;\n\n  @property({ type: Boolean })\n  inputIsFocused = false;\n\n  @property({ type: Number })\n  clusterId!: number;\n\n  @property({ type: Boolean })\n  userScrolled = false;\n\n  @property({ type: Number })\n  communityId!: number;\n\n  @property({ type: String })\n  textInputLabel!: string;\n\n  @property({ type: Boolean })\n  lastChainCompletedAsValid = false;\n\n  @property({ type: String })\n  currentFollowUpQuestions: string = '';\n\n  @property({ type: Boolean })\n  programmaticScroll = false;\n\n  @property({ type: Number })\n  scrollStart: number = 0;\n\n  @query('#sendButton')\n  sendButton?: MdFilledTonalButton;\n\n  @queryAll('ltp-ai-chat-element')\n  chatElements?: LtpAiChatElement[];\n\n  @query('#chatInput')\n  chatInputField?: MdOutlinedTextField;\n\n  @query('#chat-window')\n  chatWindow?: HTMLElement;\n\n  @query('#chat-messages')\n  chatMessagesElement?: HTMLElement;\n\n  @property({ type: Array })\n  lastCausesToValidate: string[] | undefined;\n\n  @property({ type: Array })\n  lastValidatedCauses: string[] | undefined;\n\n  api: LtpServerApi;\n  heartbeatInterval: number | undefined;\n\n  constructor() {\n    super();\n    this.api = new LtpServerApi();\n  }\n\n  calcVH() {\n    const vH = Math.max(\n      document.documentElement.clientHeight,\n      window.innerHeight || 0\n    );\n    this.chatWindow!.setAttribute('style', 'height:' + vH + 'px;');\n  }\n\n  handleCtrlPKeyPress(event: KeyboardEvent) {\n    if ((event.ctrlKey || event.metaKey) && event.altKey && event.key === 'c') {\n      this.copyLatestDebugInfoToClipboard();\n      event.preventDefault();\n    }\n  }\n\n  copyLatestDebugInfoToClipboard() {\n    const latestChatMessage = this.chatLog[this.chatLog.length - 1];\n    if (latestChatMessage && latestChatMessage.debug) {\n      const systemPrompt =\n        latestChatMessage.debug.systemPromptUsedForGeneration || '';\n      const firstUserPrompt =\n        latestChatMessage.debug.firstUserMessageUserForGeneration || '';\n      const debugInfo = `${systemPrompt}\\n\\n-------------------------\\n\\n${firstUserPrompt}`;\n\n      navigator.clipboard\n        .writeText(debugInfo)\n        .then(() => console.log('Debug info copied to clipboard!'))\n        .catch(err => console.error('Failed to copy debug info:', err));\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.defaultInfoMessage += `**${this.nodeToAddCauseTo.description}**`;\n    console.error(this.defaultInfoMessage);\n\n    if (PROMPT_DEBUG) {\n      document.addEventListener('keydown', this.handleCtrlPKeyPress.bind(this));\n    }\n\n    this.initWebSockets();\n\n    this.ws.onmessage = this.onMessage.bind(this);\n    this.ws.onopen = this.onWsOpen.bind(this);\n    this.ws.onerror = error => {\n      //TODO: Try to resend the last message\n      console.error('WebSocket Error ' + error);\n      setTimeout(() => this.initWebSockets(), 500);\n    };\n    this.ws.onclose = error => {\n      console.error('WebSocket Close ' + error);\n      setTimeout(() => this.initWebSockets(), 500);\n    };\n  }\n\n  initWebSockets() {\n    let wsEndpoint;\n\n    if (\n      window.location.hostname === 'localhost' ||\n      window.location.hostname === '192.1.168'\n    ) {\n      wsEndpoint = `ws://${window.location.hostname}:9292`;\n    } else {\n      wsEndpoint = `wss://${window.location.hostname}:443`;\n    }\n\n    try {\n      this.ws = new WebSocket(wsEndpoint);\n    } catch (error) {\n      console.error('WebSocket Error ' + error);\n      setTimeout(() => this.initWebSockets(), 2500);\n    }\n  }\n\n  protected override firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>): void {\n    // focus the text input\n    setTimeout(() => {\n      this.chatInputField!.focus();\n    }, 420);\n\n    setTimeout(() => {\n      this.chatMessagesElement!.addEventListener('scroll', this.handleScroll.bind(this));\n    }, 500);\n  }\n\n  sendHeartbeat() {\n    if (this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify({ type: 'heartbeat' }));\n    }\n  }\n\n  onWsOpen() {\n    console.error('WebSocket Open');\n    this.sendHeartbeat();\n\n    //@ts-ignore\n    this.heartbeatInterval = setInterval(() => this.sendHeartbeat(), 55000);\n    this.ws.onmessage = messageEvent => {\n      const data = JSON.parse(messageEvent.data);\n      if (data.clientId) {\n        this.wsClientId = data.clientId;\n        this.ws.onmessage = this.onMessage.bind(this);\n      } else {\n        console.error('Error: No clientId received from server!');\n      }\n    };\n    this.reset();\n  }\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n    if (changedProperties.has('themeDarkMode')) {\n    }\n  }\n\n  handleScroll() {\n    if (this.programmaticScroll) {\n      return; // Skip handling if the scroll was initiated programmatically\n    }\n\n    const currentScrollTop = this.chatMessagesElement!.scrollTop;\n    if (this.scrollStart === 0) { // Initial scroll\n      this.scrollStart = currentScrollTop;\n    }\n\n    const threshold = 10;\n    const atBottom =\n      this.chatMessagesElement!.scrollHeight - currentScrollTop - this.chatMessagesElement!.clientHeight <= threshold;\n\n    if (atBottom) {\n      this.userScrolled = false;\n      this.scrollStart = 0; // Reset scroll start\n    } else if (Math.abs(this.scrollStart - currentScrollTop) > threshold) {\n      this.userScrolled = true;\n      // Optionally reset scrollStart here if you want to continuously check for threshold scroll\n      // this.scrollStart = currentScrollTop;\n    }\n  }\n\n\n  override disconnectedCallback(): void {\n    //    this.ws.close();\n    super.disconnectedCallback();\n\n    if (PROMPT_DEBUG) {\n      document.removeEventListener(\n        'keydown',\n        this.handleCtrlPKeyPress.bind(this)\n      );\n    }\n\n    if (this.chatMessagesElement) {\n      this.chatMessagesElement.removeEventListener(\n        'scroll',\n        this.handleScroll.bind(this)\n      );\n    }\n\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n    }\n  }\n\n  async onMessage(event: MessageEvent) {\n    const data: LtpAiChatWsMessage = JSON.parse(event.data);\n    //console.error(event.data);\n\n    switch (data.sender) {\n      case 'bot':\n        this.addChatBotElement(data);\n        break;\n      case 'you':\n        this.addChatUserElement(data);\n        break;\n    }\n\n    if (this.chatLog.length > 1) {\n      this.textInputLabel = this.t('Ask a follow-up question');\n    }\n\n    if (data.type !== 'stream_followup') {\n      this.scrollDown();\n    }\n  }\n\n  scrollDown() {\n    if (!this.userScrolled) {\n      this.programmaticScroll = true; // Set the flag before scrolling\n      this.$$('#chat-messages')!.scrollTop = this.$$('#chat-messages')!.scrollHeight;\n      setTimeout(() => {\n        this.programmaticScroll = false; // Reset the flag after scrolling\n      }, 100);\n    }\n  }\n\n  addToChatLogWithMessage(\n    data: LtpAiChatWsMessage,\n    message: string | undefined = undefined,\n    changeButtonDisabledState: boolean | undefined = undefined,\n    changeButtonLabelTo: string | undefined = undefined,\n    refinedCausesSuggestions: string[] | undefined = undefined,\n    rawMessage: string | undefined = undefined\n  ) {\n    this.infoMessage = message!;\n    data.refinedCausesSuggestions = refinedCausesSuggestions || [];\n    data.rawMessage = data.rawMessage || rawMessage;\n    this.chatLog = [...this.chatLog, data];\n\n    this.requestUpdate();\n\n    if (changeButtonDisabledState !== undefined) {\n      this.sendButton!.disabled = changeButtonDisabledState;\n    }\n\n    if (changeButtonLabelTo !== undefined) {\n      //this.sendButton!.innerHTML = changeButtonLabelTo;\n    }\n  }\n\n  addChatBotElement(data: LtpAiChatWsMessage) {\n    const lastElement = this.chatElements![this.chatElements!.length - 1];\n    switch (data.type) {\n      case 'hello_message':\n        this.addToChatLogWithMessage(data);\n        break;\n      case 'thinking':\n        if (lastElement) {\n          lastElement.active = false;\n        }\n        this.addToChatLogWithMessage(data, this.t('Thinking...'));\n        break;\n      case 'noStreaming':\n        if (lastElement) {\n          lastElement.active = true;\n        }\n        this.addToChatLogWithMessage(data, data.message);\n        break;\n      case 'validationAgentStart':\n        if (lastElement) {\n          lastElement.active = false;\n        }\n        const startOptions = data.message as unknown as PsAgentStartWsOptions;\n\n        setTimeout(() => {\n          this.scrollDown();\n        }, 50);\n\n        if (startOptions.noStreaming) {\n          this.addChatBotElement({\n            sender: 'bot',\n            type: 'noStreaming',\n            message: startOptions.name,\n          });\n        } else {\n          this.addToChatLogWithMessage(data, startOptions.name);\n          this.chatLog[\n            this.chatLog.length - 1\n          ].message = `${startOptions.name}\\n\\n`;\n        }\n        this.requestUpdate();\n        break;\n      case 'validationAgentCompleted':\n        if (lastElement) {\n          lastElement.active = false;\n        }\n        this.lastChainCompletedAsValid = false;\n        this.lastValidatedCauses = undefined;\n\n        const completedOptions =\n          data.message as unknown as PsAgentCompletedWsOptions;\n        if (\n          completedOptions.results.lastAgent ||\n          (completedOptions.results.validationErrors &&\n            completedOptions.results.validationErrors.length > 0)\n        ) {\n          this.getSuggestionsFromValidation(completedOptions.name, completedOptions.results);\n        }\n        if (\n          completedOptions.results.isValid &&\n          completedOptions.results.lastAgent\n        ) {\n          this.lastChainCompletedAsValid = true;\n          this.lastValidatedCauses = this.lastCausesToValidate;\n        }\n        break;\n      case 'start':\n        if (lastElement) {\n          lastElement.active = false;\n        }\n        this.addToChatLogWithMessage(data, this.t('Thinking...'));\n        if (!this.chatLog[this.chatLog.length - 1].message)\n          this.chatLog[this.chatLog.length - 1].message = '';\n        break;\n      case 'start_followup':\n        lastElement.followUpQuestionsRaw = '';\n        break;\n      case 'stream_followup':\n        lastElement.followUpQuestionsRaw += data.message;\n        this.requestUpdate();\n        break;\n      case 'info':\n        this.infoMessage = data.message;\n        break;\n      case 'moderation_error':\n        data.message =\n          'OpenAI Moderation Flag Error. Please refine your question.';\n        this.addToChatLogWithMessage(data, data.message, false, this.t('Send'));\n        break;\n      case 'error':\n        this.addToChatLogWithMessage(data, data.message, false, this.t('Send'));\n        break;\n      case 'end':\n        lastElement.stopJsonLoading();\n        this.chatLog[this.chatLog.length - 1].debug = data.debug;\n        this.sendButton!.disabled = false;\n        this.sendButton!.innerHTML = this.t('Send');\n        this.infoMessage = this.defaultInfoMessage;\n        break;\n      case 'message':\n        if (lastElement) {\n          lastElement.active = false;\n        }\n        this.addToChatLogWithMessage(\n          data,\n          data.message,\n          undefined,\n          undefined,\n          data.refinedCausesSuggestions\n        );\n        this.chatLog[this.chatLog.length - 1].refinedCausesSuggestions =\n          data.refinedCausesSuggestions;\n        this.sendButton!.disabled = false;\n        this.sendButton!.innerHTML = this.t('Send');\n        this.infoMessage = this.defaultInfoMessage;\n        this.requestUpdate();\n        break;\n      case 'stream':\n        if (data.message && data.message != 'undefined') {\n          //@ts-ignore\n          this.infoMessage = this.t('typing');\n          this.chatLog[this.chatLog.length - 1].message =\n            this.chatLog[this.chatLog.length - 1].message + data.message;\n          //console.error(this.chatLog[this.chatLog.length - 1].message)\n          this.requestUpdate();\n          break;\n        }\n    }\n\n    this.scrollDown();\n  }\n\n  addChatUserElement(data: LtpAiChatWsMessage) {\n    this.chatLog = [...this.chatLog, data];\n  }\n\n  async sendChatMessage() {\n    const message = this.chatInputField!.value;\n\n    if (message.length === 0) return;\n\n    //this.ws.send(message);\n    this.chatInputField!.value = '';\n    this.sendButton!.disabled = false;\n    //this.sendButton!.innerHTML = this.t('Thinking...');\n    setTimeout(() => {\n      this.chatInputField!.blur();\n    });\n\n    const effect = this.nodeToAddCauseTo.description;\n\n    let causes = message\n      .split('\\n')\n      .map(cause => cause.trim())\n      .filter(cause => cause !== '');\n\n    let firstUserMessage = `Effect: ${effect}\\n`;\n    causes.forEach((cause, index) => {\n      firstUserMessage += `Cause ${index + 1}: ${cause}\\n`;\n    });\n\n    this.addChatBotElement({\n      sender: 'you',\n      type: 'start',\n      message: this.chatLog.length === 0 ? firstUserMessage : message,\n    });\n\n    if (this.chatLog.length === 1) {\n      this.lastCausesToValidate = causes;\n      await this.api.runValidationChain(\n        this.crtData.id!,\n        this.nodeToAddCauseTo.id,\n        this.chatLog,\n        this.wsClientId,\n        effect,\n        causes\n      );\n    } else {\n      this.addChatBotElement({\n        sender: 'bot',\n        type: 'thinking',\n        message: '',\n      });\n\n      this.lastChainCompletedAsValid = false;\n\n      await this.api.sendGetRefinedCauseQuery(\n        this.crtData.id!,\n        this.nodeToAddCauseTo.id,\n        this.chatLog,\n        this.wsClientId\n      );\n    }\n  }\n\n  async validateSelectedChoices(event: CustomEvent) {\n    const causes = event.detail;\n    this.lastCausesToValidate = causes;\n\n    await this.api.runValidationChain(\n      this.crtData.id!,\n      this.nodeToAddCauseTo.id,\n      this.chatLog,\n      this.wsClientId,\n      this.nodeToAddCauseTo.description,\n      causes\n    );\n  }\n\n  async getSuggestionsFromValidation(\n    agentName: string,\n    validationResults: PsValidationAgentResult\n  ) {\n    let effect;\n    effect = this.nodeToAddCauseTo.description;\n\n    let userMessage = `Expert: ${agentName}\n\nEffect: ${this.nodeToAddCauseTo?.description}\\n`;\n    this.lastCausesToValidate!.forEach((cause, index) => {\n      userMessage += `Cause ${index + 1}: ${cause}\\n`;\n    });\n\n    userMessage+=`Expert Validation Results:\\n`;\n\n    userMessage += JSON.stringify(validationResults, null, 2);\n\n    this.addChatBotElement({\n      sender: 'you',\n      type: 'start',\n      message: userMessage,\n    });\n\n    this.chatLog[this.chatLog.length - 1].hidden = true;\n\n    this.addChatBotElement({\n      sender: 'bot',\n      type: 'thinking',\n      message: '',\n    });\n\n    await this.api.sendGetRefinedCauseQuery(\n      this.crtData.id!,\n      this.nodeToAddCauseTo.id,\n      this.chatLog,\n      this.wsClientId\n    );\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        md-textfield {\n          width: 600px;\n          --mdc-theme-primary: var(--md-sys-color-primary);\n          --mdc-text-field-ink-color: var(--md-sys-color-on-surface);\n          --mdc-text-area-outlined-hover-border-color: var(\n            --md-sys-color-on-surface\n          );\n          --mdc-text-area-outlined-idle-border-color: var(\n            --md-sys-color-on-surface\n          );\n          --mdc-notched-outline-border-color: var(\n            --md-sys-color-on-surface-variant\n          );\n        }\n\n        md-outlined-text-field {\n          width: 350px;\n        }\n\n        .infoMessage {\n          margin-top: 8px;\n        }\n\n        .chat-window {\n          display: flex;\n          flex-direction: column;\n          height: 75vh;\n          width: 100%;\n          max-width: 1200px;\n          margin: 0 auto;\n          border-radius: 10px;\n          overflow: hidden;\n        }\n        .chat-messages {\n          display: flex;\n          flex-direction: column;\n          flex: 1;\n          padding: 20px;\n          overflow-y: scroll;\n        }\n\n        .you-chat-element {\n          align-self: flex-end;\n          max-width: 80%;\n          justify-content: flex-end;\n          margin-right: 32px;\n        }\n\n        .bot-chat-element {\n          align-self: flex-start;\n          justify-content: flex-start;\n          width: 100%;\n          max-width: 100%;\n        }\n\n        .chat-input {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 10px;\n        }\n\n        @media (max-width: 600px) {\n          .chat-window {\n            height: 100%;\n          }\n\n          .you-chat-element {\n            margin-right: 0;\n          }\n        }\n\n        md-tonal-button {\n          padding: 16px;\n          padding-left: 0;\n          margin-top: 0;\n        }\n\n        .sendIcon {\n          cursor: pointer;\n        }\n\n        .restartButton {\n          margin-left: 16px;\n        }\n\n        .darkModeButton {\n          margin-right: 16px;\n        }\n\n        md-outlined-text-field {\n          flex: 1;\n          border-radius: 10px;\n          border: none;\n          padding: 10px;\n          margin: 16px;\n          margin-bottom: 16px;\n          margin-left: 8px;\n          margin-right: 8px;\n          width: 650px;\n        }\n\n        ltp-ai-chat-element[thinking] {\n          margin-top: 8px;\n          margin-bottom: 0px;\n        }\n\n        @media (max-width: 960px) {\n          .restartButton {\n            margin-left: 8px;\n            display: none;\n          }\n\n          .darkModeButton {\n            margin-right: 8px;\n            display: none;\n          }\n\n          md-outlined-text-field {\n            transition: transform 0.5s;\n            width: 400px;\n          }\n\n          .restartButton[input-is-focused] {\n          }\n\n          .darkModeButton[input-is-focused] {\n          }\n\n          md-outlined-text-field[focused] {\n            width: 100%;\n          }\n        }\n\n        @media (max-width: 450px) {\n          md-outlined-text-field {\n            width: 350px;\n          }\n\n          md-outlined-text-field[focused] {\n            width: 100%;\n          }\n        }\n\n        @media (max-width: 400px) {\n          md-outlined-text-field {\n            width: 320px;\n          }\n\n          md-outlined-text-field[focused] {\n            width: 100%;\n          }\n        }\n      `,\n    ];\n  }\n\n  followUpQuestion(event: CustomEvent) {\n    this.chatInputField!.value = event.detail;\n    this.sendChatMessage();\n  }\n\n  reset() {\n    this.chatLog = [];\n    this.ws.send('<|--reset-chat--|>');\n  }\n\n  toggleDarkMode() {\n    this.themeDarkMode = !this.themeDarkMode;\n    this.fire('theme-dark-mode', this.themeDarkMode);\n    this.requestUpdate();\n  }\n\n  renderChatInput() {\n    return html`\n      <md-outlined-text-field\n        class=\"textInput\"\n        .type=\"${this.chatLog.length > 1 ? 'text' : 'textarea'}\"\n        hasTrailingIcon\n        id=\"chatInput\"\n        rows=\"${this.chatLog.length > 1 ? '1' : '3'}\"\n        @focus=\"${() => (this.inputIsFocused = true)}\"\n        @blur=\"${() => (this.inputIsFocused = true)}\"\n        @keyup=\"${(e: KeyboardEvent) => {\n          if (e.key === 'Enter' && this.chatLog.length > 1) {\n            this.sendChatMessage();\n          }\n        }}\"\n        .label=\"${this.textInputLabel}\"\n      >\n        <md-icon\n          class=\"sendIcon\"\n          @click=\"${this.sendChatMessage}\"\n          slot=\"trailing-icon\"\n          id=\"sendButton\"\n          ?input-is-focused=\"${this.inputIsFocused}\"\n          >send</md-icon\n        >\n      </md-outlined-text-field>\n    `;\n  }\n\n  override render() {\n    return html`\n      <div class=\"chat-window\" id=\"chat-window\">\n        <div class=\"chat-messages\" id=\"chat-messages\">\n          <ltp-ai-chat-element\n            class=\"bot-chat-element\"\n            .detectedLanguage=\"${this.language}\"\n            .message=\"${this.defaultInfoMessage}\"\n            type=\"info\"\n            sender=\"bot\"\n          ></ltp-ai-chat-element>\n          ${this.chatLog\n            .filter(chatElement => !chatElement.hidden)\n            .map(\n              chatElement => html`\n                <ltp-ai-chat-element\n                  ?thinking=\"${chatElement.type === 'thinking' ||\n                  chatElement.type === 'noStreaming'}\"\n                  @followup-question=\"${this.followUpQuestion}\"\n                  @validate-selected-causes=\"${this.validateSelectedChoices}\"\n                  .clusterId=\"${this.clusterId}\"\n                  class=\"${chatElement.sender}-chat-element\"\n                  .detectedLanguage=\"${this.language}\"\n                  .message=\"${chatElement.message}\"\n                  @scroll-down-enabled=\"${() => (this.userScrolled = false)}\"\n                  .lastChainCompletedAsValid=\"${this.lastChainCompletedAsValid}\"\n                  .lastValidatedCauses=\"${this.lastValidatedCauses}\"\n                  .crtId=\"${this.crtData.id}\"\n                  .parentNodeId=\"${this.nodeToAddCauseTo.id}\"\n                  .type=\"${chatElement.type}\"\n                  .sender=\"${chatElement.sender}\"\n                ></ltp-ai-chat-element>\n              `\n            )}\n        </div>\n        <div class=\"layout horizontal center-center chat-input\">\n          ${this.renderChatInput()}\n        </div>\n      </div>\n    `;\n  }\n}\n"]}