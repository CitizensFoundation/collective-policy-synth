{"version":3,"file":"yp-post-transcript.js","sourceRoot":"","sources":["../../../../src/@yrpri/yp-post/yp-post-transcript.ts"],"names":[],"mappings":"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","sourcesContent":["import { YpAccessHelpers } from '../common/YpAccessHelpers.js';\nimport { YpMediaHelpers } from '../common/YpMediaHelpers.js';\n\nimport { YpCollection } from '../yp-collection/yp-collection.js';\nimport { nothing, html, TemplateResult, LitElement, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport '@material/web/iconbutton/outlined-icon-button.js';\nimport '@material/web/textfield/outlined-text-field.js'\nimport '@material/mwc-circular-progress-four-color';\n\n//import './yp-posts-list.js';\n//import './yp-post-card-add.js';\nimport '../common/yp-emoji-selector.js';\n\nimport { YpBaseElement } from '../common/yp-base-element.js';\nimport { YpFormattingHelpers } from '../common/YpFormattingHelpers.js';\nimport { YpNavHelpers } from '../common/YpNavHelpers.js';\nimport { YpPostCard } from './yp-post-card.js';\nimport { ShadowStyles } from '../common/ShadowStyles.js';\nimport { YpBaseElementWithLogin } from '../common/yp-base-element-with-login.js';\nimport { YpEmojiSelector } from '../common/yp-emoji-selector.js';\n\n// TODO: Remove\ninterface AcActivity extends LitElement {\n  scrollToItem(item: YpDatabaseItem): () => void;\n  loadNewData(): () => void;\n}\n\n@customElement('yp-post-transcript')\nexport class YpPostTranscript extends YpBaseElement {\n  @property({ type: Boolean })\n  isEditing = false;\n\n  @property({ type: String })\n  editText: string | undefined;\n\n  @property({ type: Boolean })\n  checkingTranscript = false;\n\n  @property({ type: Boolean })\n  checkTranscriptError = false;\n\n  @property({ type: Object })\n  post!: YpPostData;\n\n  static get styles() {\n    return [\n      super.styles,\n      ShadowStyles,\n      css`\n        .transcriptContainer {\n          width: 420px;\n          max-width: 420px;\n        }\n\n        @media (max-width: 960px) {\n          .transcriptContainer {\n            width: 100%;\n            max-width: 100%;\n          }\n        }\n\n        #postTranscriptionEditor {\n          padding-left: 8px;\n          padding-right: 8px;\n        }\n\n        .transcriptError {\n          margin-top: 8px;\n          margin-bottom: 8px;\n          color: #f00;\n        }\n\n        .checkTranscript {\n          margin-top: 8px;\n          padding: 8px;\n        }\n\n        .transcriptText {\n          margin-top: 0;\n          padding: 8px;\n          color: #444;\n          padding-bottom: 0;\n          font-style: italic;\n          margin-bottom: 8px;\n        }\n\n        .transcriptHeader {\n          color: #222;\n          margin-bottom: 2px;\n          font-style: normal;\n        }\n\n        .editIcon {\n        }\n      `,\n    ];\n  }\n\n  render() {\n    return html`\n      <div class=\"transcriptContainer\">\n        ${this.checkingTranscript\n          ? html`\n              <div class=\"layout vertical center-center checkTranscript\">\n                <div>${this.t('checkingForTranscript')}</div>\n                <mwc-circular-progress-four-color indeterminate></mwc-circular-progress-four-color>\n              </div>\n            `\n          : nothing}\n\n        <div\n          class=\"transcriptError layout horizontal center-center\"\n          ?hidden=\"${!this.checkTranscriptError}\">\n          ${this.t('checkTranscriptError')}\n        </div>\n\n        ${this.post.public_data!.transcript!.text\n          ? html`\n              <div class=\"transcriptText layout vertical center-center\">\n                <div\n                  class=\"transcriptHeader\"\n                  ?hidden=\"${this.post.public_data!.transcript\n                    .noMachineTranslation}\">\n                  ${this.t('automaticTranscript')}\n                  <span\n                    ?hidden=\"${!this.post.public_data!.transcript.userEdited}\">\n                    (${this.t('edited')})\n                  </span>\n                </div>\n                <div id=\"postContentTranscript\" ?hidden=\"${this.isEditing}\">\n                  <yp-magic-text\n                    text-type=\"postTranscriptContent\"\n                    .contentLanguage=\"${this.post.public_data!.transcript\n                      .language}\"\n                    .content=\"${this.post.public_data!.transcript.text}\"\n                    .contentId=\"${this.post.id}\">\n                  </yp-magic-text>\n                </div>\n\n                ${this.hasPostAccess\n                  ? html`\n                      <div\n                        class=\"layout horizontal\"\n                        ?hidden=\"${this.isEditing}\">\n                        <div class=\"flex\"></div>\n                        <md-outlined-icon-button\n                          class=\"editIcon\"\n                          .title=\"${this.t('edit')}\"\n                          icon=\"create\"\n                          @click=\"${this._editPostTranscript}\"></md-outlined-icon-button>\n                      </div>\n                    `\n                  : nothing}\n              </div>\n            `\n          : nothing}\n        ${this.isEditing\n          ? html`\n              <div class=\"layout vertical\" ?hidden=\"${!this.hasPostAccess}\">\n                <md-outlined-text-field\n                  id=\"postTranscriptionEditor\"\n                  charCounter\n                  maxlength=\"500\"\n                  .value=\"${this.editText ? this.editText : ''}\"></md-outlined-text-field>\n                <div class=\"horizontal end-justified layout\">\n                  <yp-emoji-selector\n                    id=\"postTranscriptEmojiSelector\"></yp-emoji-selector>\n                </div>\n                <div class=\"layout horizontal self-end\">\n                  <md-outlined-button\n                    @click=\"${this._cancelEdit}\"\n                    .label=\"${this.t('cancel')}\"></md-outlined-button>\n                  <md-outlined-button\n                    @click=\"${this._saveEdit}\"\n                    .label=\"${this.t('update')}\"></md-outlined-button>\n                </div>\n              </div>\n            `\n          : nothing}\n      </div>\n    `;\n  }\n\n  _isEditingChanged() {\n    this._updateEmojiBindings();\n    setTimeout(() => {\n      this.fire('iron-resize');\n    });\n  }\n\n  _updateEmojiBindings() {\n    if (this.isEditing) {\n      setTimeout(() => {\n        const post = this.$$('#postTranscriptionEditor') as HTMLInputElement;\n        const emoji = this.$$('#postTranscriptEmojiSelector') as YpEmojiSelector;\n        if (post && emoji) {\n          emoji.inputTarget = post;\n        } else {\n          console.error(\"Wide: Can't bind post edit emojis :(\");\n        }\n      }, 500);\n    }\n  }\n\n  _cancelEdit() {\n    this.isEditing = false;\n  }\n\n  async _saveEdit() {\n    await window.serverApi.savePostTranscript(this.post.id, {\n      content: this.editText,\n    });\n    this.post.public_data!.transcript.text = this.editText ? this.editText : '';\n    this.post.public_data!.transcript.userEdited = true;\n    this.isEditing = false;\n  }\n\n  _editPostTranscript() {\n    if (this.hasPostAccess) {\n      this.editText = this.post.public_data!.transcript.text;\n      this.isEditing = true;\n    }\n  }\n\n  async _checkTranscriptStatus() {\n    let transcriptType;\n    if (this.post.cover_media_type === 'audio') {\n      transcriptType = '/audioTranscriptStatus';\n    } else if (this.post.cover_media_type === 'video') {\n      transcriptType = '/videoTranscriptStatus';\n    }\n\n    this.checkingTranscript = true;\n\n    const response = (await window.serverApi.getPostTranscriptStatus(\n      this.post.id,\n      transcriptType\n    )) as YpCheckTranscriptResponse;\n\n    if (response && response.text && this.post) {\n      this.post.public_data!.transcript!.text = response.text;\n      if (this.hasPostAccess) {\n        this.editText = response.text;\n        this.isEditing = true;\n      }\n      this.checkingTranscript = false;\n      setTimeout(() => {\n        this.fire('iron-resize');\n      });\n    } else if (response && response.inProgress) {\n      setTimeout(() => {\n        this._checkTranscriptStatus();\n      }, 2000);\n    } else if (response && response.error) {\n      this.checkingTranscript = false;\n      this.checkTranscriptError = true;\n    } else {\n      this.checkingTranscript = false;\n    }\n  }\n\n  get hasPostAccess() {\n    if (this.post) {\n      return YpAccessHelpers.checkPostAccess(this.post);\n    } else {\n      return false;\n    }\n  }\n\n  updated(changedProperties: Map<string | number | symbol, unknown>) {\n    super.updated(changedProperties);\n\n    if (changedProperties.has('post')) {\n      this._postChanged();\n    }\n\n    if (changedProperties.has('isEditing')) {\n      this._isEditingChanged();\n    }\n  }\n\n  _postChanged() {\n    this.checkingTranscript = false;\n    this.checkTranscriptError = false;\n    if (this.post && this.post.description) {\n      if (\n        this.hasPostAccess &&\n        window.appGlobals.hasTranscriptSupport === true\n      ) {\n        if (\n          this.post.public_data &&\n          this.post.public_data.transcript &&\n          this.post.public_data.transcript.inProgress\n        ) {\n          this._checkTranscriptStatus();\n        }\n      }\n    }\n  }\n}\n"]}