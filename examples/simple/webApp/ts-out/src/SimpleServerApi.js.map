{"version":3,"file":"SimpleServerApi.js","sourceRoot":"","sources":["../../src/SimpleServerApi.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,MAAM,OAAO,mBAAoB,SAAQ,WAAW;IAClD,YAAY,UAAkB,MAAM;QAClC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;IAC7B,CAAC;IAEM,YAAY,CACjB,OAA4B,EAC5B,UAAkB;QAElB,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,IAAI,UAAU,IAAI,WAAW,CAAC,IAAI,IAAI,aAAa,CAAC,CAAC;QAE7G,MAAM,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;YAClD,OAAO;gBACL,MAAM,EAAE,WAAW,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM;gBAC1D,OAAO,EAAE,WAAW,CAAC,UAAU;oBAC7B,CAAC,CAAC,WAAW,CAAC,UAAU;oBACxB,CAAC,CAAC,WAAW,CAAC,OAAO;aACxB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,YAAY,CACtB,IAAI,CAAC,WAAW,GAAG,cAAc,EACjC;YACE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC;SACjE,EACD,KAAK,CACW,CAAC;IACrB,CAAC;CAEF","sourcesContent":["import { YpServerApi } from \"@yrpri/webapp\";\n\nexport class SimpleChatServerApi extends YpServerApi {\n  constructor(urlPath: string = '/api') {\n    super();\n    this.baseUrlPath = urlPath;\n  }\n\n  public conversation(\n    chatLog: PsAiChatWsMessage[],\n    wsClientId: string,\n  ): Promise<void> {\n    chatLog = chatLog.filter(chatMessage => chatMessage.type != 'thinking' && chatMessage.type != 'noStreaming');\n\n    const simplifiedChatLog = chatLog.map(chatMessage => {\n      return {\n        sender: chatMessage.sender == 'bot' ? 'assistant' : 'user',\n        message: chatMessage.rawMessage\n          ? chatMessage.rawMessage\n          : chatMessage.message,\n      };\n    });\n\n    return this.fetchWrapper(\n      this.baseUrlPath + `simple_chat/`,\n      {\n        method: 'PUT',\n        body: JSON.stringify({ wsClientId, chatLog: simplifiedChatLog }),\n      },\n      false\n    ) as Promise<void>;\n  }\n\n}\n"]}